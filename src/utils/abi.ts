const abi = [
  {
    type: "constructor",
    inputs: [
      { name: "_owner", type: "address", internalType: "address" },
      { name: "_name", type: "string", internalType: "string" },
    ],
    stateMutability: "payable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "cancelSchedule",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelStream",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createSchedule",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "token", type: "address", internalType: "address" },
      { name: "interval", type: "uint8", internalType: "enum IPayments.IntervalType" },
      { name: "isOneTime", type: "bool", internalType: "bool" },
      { name: "firstPaymentDate", type: "uint40", internalType: "uint40" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "token", type: "address", internalType: "address" },
      { name: "endStream", type: "uint40", internalType: "uint40" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "editSchedule",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "editStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getSchedule",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPayments.Schedule",
        components: [
          { name: "token", type: "address", internalType: "address" },
          { name: "nextPayout", type: "uint40", internalType: "uint40" },
          { name: "interval", type: "uint8", internalType: "enum IPayments.IntervalType" },
          { name: "isOneTime", type: "bool", internalType: "bool" },
          { name: "active", type: "bool", internalType: "bool" },
          { name: "amount", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStream",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPayments.Stream",
        components: [
          { name: "token", type: "address", internalType: "address" },
          { name: "endDate", type: "uint40", internalType: "uint40" },
          { name: "active", type: "bool", internalType: "bool" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "lastPayout", type: "uint40", internalType: "uint40" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "orgName",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "requestSchedulePayout",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestStreamPayout",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
    outputs: [{ name: "payoutAmount", type: "uint256", internalType: "uint256" }],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "PaymentScheduleCancelled",
    inputs: [{ name: "username", type: "string", indexed: false, internalType: "string" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymentStreamCancelled",
    inputs: [{ name: "username", type: "string", indexed: false, internalType: "string" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleActive",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "token", type: "address", indexed: false, internalType: "address" },
      { name: "nextPayout", type: "uint40", indexed: false, internalType: "uint40" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SchedulePayout",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "token", type: "address", indexed: false, internalType: "address" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleUpdated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamActive",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "token", type: "address", indexed: false, internalType: "address" },
      { name: "endDate", type: "uint40", indexed: false, internalType: "uint40" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamPayout",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "token", type: "address", indexed: false, internalType: "address" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamUpdated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  { type: "error", name: "ActivePayment", inputs: [{ name: "username", type: "string", internalType: "string" }] },
  { type: "error", name: "EmptyUsernameNotAllowed", inputs: [] },
  { type: "error", name: "InActivePayment", inputs: [{ name: "username", type: "string", internalType: "string" }] },
  { type: "error", name: "IncompatibleUserAddress", inputs: [] },
  { type: "error", name: "InsufficientBalance", inputs: [] },
  { type: "error", name: "InsufficientFee", inputs: [] },
  { type: "error", name: "InvalidAmount", inputs: [] },
  { type: "error", name: "InvalidEndDate", inputs: [] },
  { type: "error", name: "InvalidFirstPaymentDate", inputs: [] },
  { type: "error", name: "InvalidInterval", inputs: [] },
  { type: "error", name: "InvalidStreamEnd", inputs: [] },
  { type: "error", name: "InvalidSubscriptionPeriod", inputs: [] },
  { type: "error", name: "MaxOrganizationsReached", inputs: [] },
  { type: "error", name: "NoActivePayment", inputs: [{ name: "username", type: "string", internalType: "string" }] },
  { type: "error", name: "NoEditAccess", inputs: [] },
  { type: "error", name: "NoPayoutDue", inputs: [] },
  { type: "error", name: "NotAuthorized", inputs: [] },
  { type: "error", name: "TokenAlreadySupported", inputs: [] },
  { type: "error", name: "TokenNotSupported", inputs: [] },
  { type: "error", name: "UserNotClaimor", inputs: [] },
  { type: "error", name: "UserNotFound", inputs: [{ name: "username", type: "string", internalType: "string" }] },
  {
    type: "error",
    name: "UsernameAlreadyClaimed",
    inputs: [{ name: "username", type: "string", internalType: "string" }],
  },
] as const;

export default abi;

const paymentsPluginAbi = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "DEFAULT_FUNDING_PERIOD",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MANAGER_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SET_TARGET_CONFIG_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_PLUGIN_PERMISSION_ID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancelSchedule",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "scheduleId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cancelStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createSchedule",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "token", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "interval", type: "uint8", internalType: "enum IPayments.IntervalType" },
      { name: "isOneTime", type: "bool", internalType: "bool" },
      { name: "firstPaymentDate", type: "uint40", internalType: "uint40" },
    ],
    outputs: [{ name: "scheduleId", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "token", type: "address", internalType: "address" },
      { name: "amountPerSec", type: "uint216", internalType: "uint216" },
    ],
    outputs: [{ name: "streamId", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "dao",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IDAO" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "executeSchedule",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "scheduleId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "executeStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCurrentTargetConfig",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPlugin.TargetConfig",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "operation", type: "uint8", internalType: "enum IPlugin.Operation" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSchedule",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "scheduleId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPayments.Schedule",
        components: [
          { name: "token", type: "address", internalType: "address" },
          { name: "amount", type: "uint256", internalType: "uint256" },
          { name: "interval", type: "uint8", internalType: "enum IPayments.IntervalType" },
          { name: "isOneTime", type: "bool", internalType: "bool" },
          { name: "active", type: "bool", internalType: "bool" },
          { name: "firstPaymentDate", type: "uint40", internalType: "uint40" },
          { name: "nextPayout", type: "uint40", internalType: "uint40" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPayments.Stream",
        components: [
          { name: "token", type: "address", internalType: "address" },
          { name: "amountPerSec", type: "uint216", internalType: "uint216" },
          { name: "state", type: "uint8", internalType: "enum IPayments.StreamState" },
          { name: "startTime", type: "uint40", internalType: "uint40" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTargetConfig",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IPlugin.TargetConfig",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "operation", type: "uint8", internalType: "enum IPlugin.Operation" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      { name: "_dao", type: "address", internalType: "contract IDAO" },
      { name: "_registryAddress", type: "address", internalType: "address" },
      { name: "_llamaPayFactoryAddress", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "llamaPayFactory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract ILlamaPayFactory" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "migrateStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pauseStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pluginType",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "enum IPlugin.PluginType" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "protocolVersion",
    inputs: [],
    outputs: [{ name: "", type: "uint8[3]", internalType: "uint8[3]" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registry",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IRegistry" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "resumeStream",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "schedules",
    inputs: [
      { name: "", type: "string", internalType: "string" },
      { name: "", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "amount", type: "uint256", internalType: "uint256" },
      { name: "interval", type: "uint8", internalType: "enum IPayments.IntervalType" },
      { name: "isOneTime", type: "bool", internalType: "bool" },
      { name: "active", type: "bool", internalType: "bool" },
      { name: "firstPaymentDate", type: "uint40", internalType: "uint40" },
      { name: "nextPayout", type: "uint40", internalType: "uint40" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setTargetConfig",
    inputs: [
      {
        name: "_targetConfig",
        type: "tuple",
        internalType: "struct IPlugin.TargetConfig",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "operation", type: "uint8", internalType: "enum IPlugin.Operation" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "streamRecipients",
    inputs: [
      { name: "", type: "string", internalType: "string" },
      { name: "", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "streams",
    inputs: [
      { name: "", type: "string", internalType: "string" },
      { name: "", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [
      { name: "token", type: "address", internalType: "address" },
      { name: "amountPerSec", type: "uint216", internalType: "uint216" },
      { name: "state", type: "uint8", internalType: "enum IPayments.StreamState" },
      { name: "startTime", type: "uint40", internalType: "uint40" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "_interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenToLlamaPay",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "updateFlowRate",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "streamId", type: "bytes32", internalType: "bytes32" },
      { name: "newAmountPerSec", type: "uint216", internalType: "uint216" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateScheduleAmount",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "scheduleId", type: "bytes32", internalType: "bytes32" },
      { name: "newAmount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateScheduleInterval",
    inputs: [
      { name: "username", type: "string", internalType: "string" },
      { name: "scheduleId", type: "bytes32", internalType: "bytes32" },
      { name: "newInterval", type: "uint8", internalType: "enum IPayments.IntervalType" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeTo",
    inputs: [{ name: "newImplementation", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      { name: "newImplementation", type: "address", internalType: "address" },
      { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "userScheduleIds",
    inputs: [
      { name: "", type: "string", internalType: "string" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "userStreamIds",
    inputs: [
      { name: "", type: "string", internalType: "string" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawStreamFunds",
    inputs: [{ name: "token", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      { name: "previousAdmin", type: "address", indexed: false, internalType: "address" },
      { name: "newAdmin", type: "address", indexed: false, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "BeaconUpgraded",
    inputs: [{ name: "beacon", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "FlowRateUpdated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "streamId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "oldAmountPerSec", type: "uint216", indexed: false, internalType: "uint216" },
      { name: "newAmountPerSec", type: "uint216", indexed: false, internalType: "uint216" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [{ name: "version", type: "uint8", indexed: false, internalType: "uint8" }],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleAmountUpdated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "scheduleId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "oldAmount", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "newAmount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleCancelled",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "scheduleId", type: "bytes32", indexed: true, internalType: "bytes32" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleCreated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "scheduleId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "token", type: "address", indexed: true, internalType: "address" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "interval", type: "uint8", indexed: false, internalType: "enum IPayments.IntervalType" },
      { name: "isOneTime", type: "bool", indexed: false, internalType: "bool" },
      { name: "firstPaymentDate", type: "uint40", indexed: false, internalType: "uint40" },
      { name: "recipient", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleExecuted",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "scheduleId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "token", type: "address", indexed: true, internalType: "address" },
      { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "periods", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "recipient", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleIntervalUpdated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "scheduleId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "oldInterval", type: "uint8", indexed: false, internalType: "enum IPayments.IntervalType" },
      { name: "newInterval", type: "uint8", indexed: false, internalType: "enum IPayments.IntervalType" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamCreated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "streamId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "token", type: "address", indexed: true, internalType: "address" },
      { name: "amountPerSec", type: "uint216", indexed: false, internalType: "uint216" },
      { name: "recipient", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamExecuted",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "streamId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "token", type: "address", indexed: true, internalType: "address" },
      { name: "recipient", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamMigrated",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "streamId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "oldRecipient", type: "address", indexed: false, internalType: "address" },
      { name: "newRecipient", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "StreamStateChanged",
    inputs: [
      { name: "username", type: "string", indexed: false, internalType: "string" },
      { name: "streamId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "oldState", type: "uint8", indexed: false, internalType: "enum IPayments.StreamState" },
      { name: "newState", type: "uint8", indexed: false, internalType: "enum IPayments.StreamState" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TargetSet",
    inputs: [
      {
        name: "newTargetConfig",
        type: "tuple",
        indexed: false,
        internalType: "struct IPlugin.TargetConfig",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "operation", type: "uint8", internalType: "enum IPlugin.Operation" },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [{ name: "implementation", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
  },
  { type: "error", name: "Address0NotSupported", inputs: [] },
  { type: "error", name: "AlreadyInitialized", inputs: [] },
  {
    type: "error",
    name: "DaoUnauthorized",
    inputs: [
      { name: "dao", type: "address", internalType: "address" },
      { name: "where", type: "address", internalType: "address" },
      { name: "who", type: "address", internalType: "address" },
      { name: "permissionId", type: "bytes32", internalType: "bytes32" },
    ],
  },
  { type: "error", name: "DelegateCallFailed", inputs: [] },
  { type: "error", name: "InvalidAmount", inputs: [] },
  { type: "error", name: "InvalidFirstPaymentDate", inputs: [] },
  { type: "error", name: "InvalidFlowRate", inputs: [] },
  {
    type: "error",
    name: "InvalidTargetConfig",
    inputs: [
      {
        name: "targetConfig",
        type: "tuple",
        internalType: "struct IPlugin.TargetConfig",
        components: [
          { name: "target", type: "address", internalType: "address" },
          { name: "operation", type: "uint8", internalType: "enum IPlugin.Operation" },
        ],
      },
    ],
  },
  { type: "error", name: "InvalidToken", inputs: [] },
  { type: "error", name: "MigrationNotRequired", inputs: [] },
  { type: "error", name: "PaymentNotDue", inputs: [] },
  { type: "error", name: "ScheduleIdNotFound", inputs: [] },
  { type: "error", name: "ScheduleNotActive", inputs: [] },
  { type: "error", name: "StreamIdNotFound", inputs: [] },
  { type: "error", name: "StreamNotActive", inputs: [] },
  { type: "error", name: "StreamStateMismatch", inputs: [] },
  { type: "error", name: "UnauthorizedMigration", inputs: [] },
  { type: "error", name: "UsernameNotFound", inputs: [] },
] as const;

const paynestDaoFactoryAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_addressRegistry", type: "address", internalType: "contract AddressRegistry" },
      { name: "_daoFactory", type: "address", internalType: "contract DAOFactory" },
      { name: "_adminPluginRepo", type: "address", internalType: "contract PluginRepo" },
      { name: "_paymentsPluginRepo", type: "address", internalType: "contract PluginRepo" },
      { name: "_llamaPayFactory", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addressRegistry",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract AddressRegistry" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "adminPluginRepo",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract PluginRepo" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createPayNestDAO",
    inputs: [
      { name: "admin", type: "address", internalType: "address" },
      { name: "daoName", type: "string", internalType: "string" },
    ],
    outputs: [
      { name: "dao", type: "address", internalType: "address" },
      { name: "adminPlugin", type: "address", internalType: "address" },
      { name: "paymentsPlugin", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createdDAOs",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "daoFactory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract DAOFactory" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "daoInfo",
    inputs: [{ name: "dao", type: "address", internalType: "address" }],
    outputs: [
      { name: "admin", type: "address", internalType: "address" },
      { name: "adminPlugin", type: "address", internalType: "address" },
      { name: "paymentsPlugin", type: "address", internalType: "address" },
      { name: "createdAt", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAddressRegistry",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreatedDAO",
    inputs: [{ name: "index", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreatedDAOsCount",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDAOInfo",
    inputs: [{ name: "dao", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct PayNestDAOFactory.DAOInfo",
        components: [
          { name: "admin", type: "address", internalType: "address" },
          { name: "adminPlugin", type: "address", internalType: "address" },
          { name: "paymentsPlugin", type: "address", internalType: "address" },
          { name: "createdAt", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "llamaPayFactory",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "paymentsPluginRepo",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract PluginRepo" }],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "PayNestDAOCreated",
    inputs: [
      { name: "dao", type: "address", indexed: true, internalType: "address" },
      { name: "admin", type: "address", indexed: true, internalType: "address" },
      { name: "adminPlugin", type: "address", indexed: false, internalType: "address" },
      { name: "paymentsPlugin", type: "address", indexed: false, internalType: "address" },
      { name: "daoName", type: "string", indexed: false, internalType: "string" },
    ],
    anonymous: false,
  },
  { type: "error", name: "AdminAddressZero", inputs: [] },
  { type: "error", name: "DAOCreationFailed", inputs: [] },
  { type: "error", name: "DAONameEmpty", inputs: [] },
  { type: "error", name: "PluginInstallationFailed", inputs: [] },
] as const;

const llamaPayAbi = [
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      { indexed: false, internalType: "uint216", name: "amountPerSec", type: "uint216" },
      { indexed: false, internalType: "bytes32", name: "streamId", type: "bytes32" },
      { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "Withdraw",
    type: "event",
  },
] as const;

export { paymentsPluginAbi, paynestDaoFactoryAbi, llamaPayAbi };

// const filters = abi.filter(ab => ab.type === "event")
